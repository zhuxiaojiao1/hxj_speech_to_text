{"version":3,"file":"js/app.128ef39a4d1e399b3e8f.js","mappings":"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","sources":["webpack://speech-to-text/./src/Components/Button/style.scss?92f9","webpack://speech-to-text/./src/Components/Button/index.tsx","webpack://speech-to-text/./src/Pages/A/index.tsx","webpack://speech-to-text/./src/Pages/A/Unit/useAudio.ts","webpack://speech-to-text/./src/Pages/B/Unit/useAudio.ts","webpack://speech-to-text/./src/DefaultData/nav.ts","webpack://speech-to-text/./src/Pages/B/index.tsx","webpack://speech-to-text/./src/Pages/Main/style.scss?4a8c","webpack://speech-to-text/./src/Pages/Main/index.tsx","webpack://speech-to-text/./src/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnWrap\":\"btnWrap\",\"btn\":\"btn\"};","import styles from \"./style.scss\";\n\ninterface ButtonProps {\n    /**\n     * 当语音转文字按钮变化时\n     */\n    handleChange: (status: boolean) => void;\n\n    status: boolean;\n\n    loading: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({ handleChange, status, loading }) => {\n    // const [start, setStart] = useState(false);\n\n    const handleClick = () => {\n        // setStart((pre) => !pre);\n        handleChange(!status);\n    };\n\n    const content = () => {\n        if (loading) {\n            return \"设备加载中……\";\n        }\n        const str = \"语音转文\";\n        if (status) {\n            return `结束${str}`;\n        }\n        return `开始${str}`;\n    };\n\n    return (\n        <div className={styles.btnWrap}>\n            <button onClick={handleClick} className={styles.btn} disabled={loading}>\n                {content()}\n            </button>\n        </div>\n    );\n};\n\nexport default Button;\n","/**\n * @file 原生api\n */\n\nimport Button from \"./../../Components/Button/index\";\nimport { useAudio } from \"./Unit/useAudio\";\n\nconst Temp: React.FC = () => {\n    const [textList, startStatus, setStartStatus, loading, setLoading] = useAudio();\n\n    const handleStart = (res: boolean) => {\n        setStartStatus(res);\n        if (res) {\n            setLoading(true);\n        }\n    };\n\n    return (\n        <div>\n            <Button handleChange={handleStart} status={startStatus} loading={loading} />\n            <div>\n                {textList.map((item, index) => (\n                    <div key={index} style={{ marginTop: \"15px\", textAlign: \"center\" }}>\n                        {item}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Temp;\n","import { SetStateAction, useEffect, useInsertionEffect, useRef, useState } from \"react\";\n\nexport const useAudio = (): [\n    string[],\n    boolean,\n    React.Dispatch<SetStateAction<boolean>>,\n    boolean,\n    React.Dispatch<SetStateAction<boolean>>,\n] => {\n    const [text, setText] = useState<string[]>([]);\n    const [startStatus, setStartStatus] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const startStatusRef = useRef(startStatus);\n\n    useInsertionEffect(() => {\n        startStatusRef.current = startStatus;\n    }, [startStatus]);\n\n    useEffect(() => {\n        const Recognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        let recognition;\n\n        const fn = () => {\n            if (!Recognition) {\n                alert(\"当前浏览器不支持\");\n                return;\n            }\n\n            recognition = new Recognition();\n\n            //设置语言类型\n            recognition.lang = \"zh\";\n\n            //启动\n            recognition.start();\n\n            //设备开始\n            recognition.onaudiostart = (e) => {\n                console.log(\"onaudiostart\", e);\n                setLoading(false);\n            };\n\n            //设备结束\n            recognition.onaudioend = (e) => {\n                console.log(\"onaudioend\", e);\n                recognition.stop();\n                setLoading(false);\n                if (startStatusRef.current) {\n                    fn();\n                }\n            };\n\n            recognition.onspeechstart = (e) => {\n                console.log(\"onspeechstart\", e);\n            };\n            recognition.onspeechend = (e) => {\n                console.log(\"onspeechend\", e);\n            };\n\n            recognition.onnomatch = (e) => {\n                console.log(\"onnomatch\", e);\n\n                setText((pre) => {\n                    const arr = [...pre];\n                    arr.push(\"语音识别失败\");\n                    return [...arr];\n                });\n            };\n            recognition.onresult = (e) => {\n                console.log(\"onresult\", e);\n                setText((pre) => {\n                    const arr = [...pre];\n                    arr.push((e.results?.[0]?.[0]?.transcript as string) ?? \"\");\n                    return [...arr];\n                });\n            };\n\n            recognition.onerror = (e) => {\n                console.log(\"onerror\", e);\n            };\n            recognition.onend = (e) => {\n                console.log(\"onend\", e);\n                setLoading(false);\n            };\n        };\n\n        if (startStatus) {\n            fn();\n        }\n        return () => {\n            recognition?.stop();\n        };\n    }, [startStatus]);\n    return [text, startStatus, setStartStatus, loading, setLoading];\n};\n","import { useEffect } from \"react\";\n/**\n * 获取设备失败\n */\nconst getMediaFail = (e: unknown) => {\n    console.log(\"设备打开失败\");\n};\n\n/**\n * 获取设备成功\n */\nconst getMediaSuccess = (e: MediaStream, audioContext: AudioContext) => {\n    const workletNode = new window.AudioWorkletNode(audioContext, \"audioWorker\");\n    workletNode.connect(audioContext.destination);\n    workletNode.port.onmessage = function (event) {\n        console.log(event);\n    };\n    // const mediaStream = this.context.createMediaStreamSource(stream);\n    // this.mediaStream = mediaStream;\n    // this.recorder.onaudioprocess = (e) => {\n    //     console.log(e);\n    //     this.sendData(e.inputBuffer.getChannelData(0));\n    // };\n};\n\nexport const start = () => {\n    const audioContext = new window.AudioContext();\n    // void audioContext.audioWorklet.addModule(worklet).then((res) => {\n    //     console.log(res);\n    // });\n\n    const { mediaDevices } = window.navigator;\n\n    if (!mediaDevices.getUserMedia) {\n        console.log(\"没有设备权限\");\n    }\n    mediaDevices\n        .getUserMedia({\n            audio: true,\n            video: false,\n        })\n        .then((e) => {\n            getMediaSuccess(e, audioContext);\n        })\n        .catch((e) => {\n            getMediaFail(e);\n        });\n};\n\nexport const useAudio = () => {\n    useEffect(() => {\n        console.log(\"\");\n    }, []);\n};\n","//原生API\nimport A from \"../Pages/A\";\n/**\n * 讯飞API\n */\nimport B from \"../Pages/B\";\n\nexport const navList = [\n    {\n        content: \"SpeechRecognition —— 原生\",\n        children: A,\n    },\n    {\n        content: \"讯飞 —— 第三方\",\n        children: B,\n    },\n    {\n        content: \"火山引擎 —— 第三方\",\n        children: A,\n    },\n    {\n        content: \"百度 —— 第三方\",\n        children: A,\n    },\n];\n","/**\n * @file 科大讯飞api\n */\n\nimport Button from \"./../../Components/Button/index\";\nimport { start } from \"./Unit/useAudio\";\n\nconst Temp: React.FC = () => {\n    const handleStart = (res: boolean) => {\n        start();\n    };\n\n    return (\n        <div>\n            我是讯飞的api\n            <Button handleChange={handleStart} status={false} loading={false} />\n            <div>\n                {/* {textList.map((item, index) => (\n                    <div key={index} style={{ marginTop: \"15px\", textAlign: \"center\" }}>\n                        {item}\n                    </div>\n                ))} */}\n            </div>\n        </div>\n    );\n};\n\nexport default Temp;\n","// extracted by mini-css-extract-plugin\nexport default {\"navList\":\"navList\",\"navItem\":\"navItem\",\"navActive\":\"navActive\"};","import { ScrollComponent } from \"@datareachable/dr_front_componentlibrary\";\nimport React, { useState } from \"react\";\nimport { navList } from \"~/DefaultData/nav\";\nimport styles from \"./style.scss\";\n\nconst Main: React.FC = () => {\n    const [selectIndex, setSelectIndex] = useState(0);\n\n    const Temp = navList[selectIndex].children;\n\n    return (\n        <ScrollComponent>\n            <div className={styles.navList}>\n                {navList.map((item, index) => {\n                    return (\n                        <div\n                            key={index}\n                            className={`${styles.navItem}${\n                                selectIndex === index ? ` ${styles.navActive}` : \"\"\n                            }`}\n                            onClick={() => {\n                                setSelectIndex(index);\n                            }}\n                        >\n                            {item.content}\n                        </div>\n                    );\n                })}\n            </div>\n            <div className={styles.main}>\n                <Temp />\n            </div>\n        </ScrollComponent>\n    );\n};\n\nexport default Main;\n","import { createRoot } from \"react-dom/client\";\nimport Main from \"./Pages/Main\";\n\ncreateRoot(document.getElementById(\"root\") ?? document.body).render(<Main />);\n"],"names":["handleChange","status","loading","className","styles","onClick","disabled","str","content","useState","text","setText","startStatus","setStartStatus","setLoading","startStatusRef","useRef","useInsertionEffect","current","useEffect","recognition","Recognition","window","SpeechRecognition","webkitSpeechRecognition","fn","lang","start","onaudiostart","e","console","log","onaudioend","stop","onspeechstart","onspeechend","onnomatch","pre","arr","push","onresult","results","transcript","onerror","onend","alert","useAudio","textList","res","map","item","index","style","marginTop","textAlign","audioContext","AudioContext","mediaDevices","navigator","getUserMedia","audio","video","then","workletNode","AudioWorkletNode","connect","destination","port","onmessage","event","getMediaSuccess","navList","children","A","selectIndex","setSelectIndex","Temp","createRoot","document","getElementById","body","render"],"sourceRoot":""}